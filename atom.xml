<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Coding</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-16T06:21:30.274Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ejoy2d源码阅读(2)-启动流程深入</title>
    <link href="http://yoursite.com/2016/10/16/ejoy2d%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-2-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E6%B7%B1%E5%85%A5/"/>
    <id>http://yoursite.com/2016/10/16/ejoy2d源码阅读-2-启动流程深入/</id>
    <published>2016-10-16T04:22:34.000Z</published>
    <updated>2016-10-16T06:21:30.274Z</updated>
    
    <content type="html"><![CDATA[<pre><code>本系列文章用于记录阅读ejoy2d的笔记，由于水平有限，有错误之处，还请不吝指正。
此篇文章分析ejoy2d的opengl ES的初始化流程。
</code></pre><a id="more"></a>
<p>上一篇文章大概的阅读了一下，从main函数到lua脚本的function注册, 这篇文章详细阅读ejoy2d的opengl初始化流程，以及ejoy2d启动之后的窗口消息流程。</p>
<h2 id="opengl-初始化"><a href="#opengl-初始化" class="headerlink" title="opengl 初始化"></a>opengl 初始化</h2><p>首先看下面一段代码<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ejoy2d.start</span><span class="params">(callback)</span></span></div><div class="line">	fw.EJOY2D_UPDATE = <span class="built_in">assert</span>(callback.update)</div><div class="line">	fw.EJOY2D_DRAWFRAME = <span class="built_in">assert</span>(callback.drawframe)</div><div class="line"></div><div class="line">	fw.EJOY2D_TOUCH = <span class="function"><span class="keyword">function</span><span class="params">(x,y,what,id)</span></span></div><div class="line">		<span class="keyword">return</span> callback.touch(touch[what],x,y,id)</div><div class="line">	<span class="keyword">end</span></div><div class="line">	fw.EJOY2D_GESTURE = <span class="function"><span class="keyword">function</span><span class="params">(what, x1, y1, x2, y2, state)</span></span></div><div class="line">		<span class="keyword">return</span> callback.gesture(gesture[what], x1, y1, x2, y2, state)</div><div class="line">	<span class="keyword">end</span></div><div class="line">	fw.EJOY2D_MESSAGE = <span class="built_in">assert</span>(callback.message)</div><div class="line">  	fw.EJOY2D_HANDLE_ERROR = <span class="built_in">assert</span>(callback.handle_error)</div><div class="line">  	fw.EJOY2D_RESUME = <span class="built_in">assert</span>(callback.on_resume)</div><div class="line">		fw.EJOY2D_PAUSE = <span class="built_in">assert</span>(callback.on_pause)</div><div class="line">	fw.inject()</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这个lua function最后会调用fw.inject(), 看看这个fuction是做什么的.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span></span></div><div class="line"><span class="title">ejoy2d_init</span><span class="params">(lua_State *L)</span> &#123;</div><div class="line">	checkluaversion(L);</div><div class="line">	lua_pushliteral(L, OS_STRING);</div><div class="line">	lua_setglobal(L , <span class="string">"OS"</span>);</div><div class="line"></div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.shader.c"</span>, ejoy2d_shader, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.framework"</span>, ejoy2d_framework, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.ppm"</span>, ejoy2d_ppm, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.spritepack.c"</span>, ejoy2d_spritepack, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.sprite.c"</span>, ejoy2d_sprite, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.renderbuffer"</span>, ejoy2d_renderbuffer, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.matrix.c"</span>, ejoy2d_matrix, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.particle.c"</span>, ejoy2d_particle, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.geometry.c"</span>, ejoy2d_geometry, <span class="number">0</span>);</div><div class="line"></div><div class="line">	lua_settop(L,<span class="number">0</span>);</div><div class="line"></div><div class="line">	shader_init();</div><div class="line">	label_load();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个函数定义了ejoy2d.framework,那么去看看ejoy2d_framework这个函数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span></span></div><div class="line"><span class="title">ejoy2d_framework</span><span class="params">(lua_State *L)</span> &#123;</div><div class="line">	luaL_Reg l[] = &#123;</div><div class="line">		&#123; <span class="string">"inject"</span>, linject &#125;,</div><div class="line">		&#123; <span class="literal">NULL</span>, <span class="literal">NULL</span> &#125;,</div><div class="line">	&#125;;</div><div class="line">	luaL_newlibtable(L, l);</div><div class="line">	lua_pushvalue(L,<span class="number">-1</span>);</div><div class="line">	luaL_setfuncs(L,l,<span class="number">1</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>原来这个函数像lua中注册了一个函数inject, 绑定的函数为linject，下面看看这个函数到底做了些什么事情。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span></span></div><div class="line"><span class="title">linject</span><span class="params">(lua_State *L)</span> &#123;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> * ejoy_callback[] = &#123;</div><div class="line">		EJOY_INIT,</div><div class="line">		EJOY_UPDATE,</div><div class="line">		EJOY_DRAWFRAME,</div><div class="line">		EJOY_TOUCH,</div><div class="line">		EJOY_GESTURE,</div><div class="line">		EJOY_MESSAGE,</div><div class="line">		EJOY_HANDLE_ERROR,</div><div class="line">		EJOY_RESUME,</div><div class="line">		EJOY_PAUSE,</div><div class="line">	&#125;;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="keyword">sizeof</span>(ejoy_callback)/<span class="keyword">sizeof</span>(ejoy_callback[<span class="number">0</span>]);i++) &#123;</div><div class="line">		lua_getfield(L, lua_upvalueindex(<span class="number">1</span>), ejoy_callback[i]);</div><div class="line">		<span class="keyword">if</span> (!lua_isfunction(L,<span class="number">-1</span>)) &#123;</div><div class="line">			<span class="keyword">return</span> luaL_error(L, <span class="string">"%s is not found"</span>, ejoy_callback[i]);</div><div class="line">		&#125;</div><div class="line">		lua_setfield(L, LUA_REGISTRYINDEX, ejoy_callback[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>原来是把ejoy2d.framework中的函数, 取出并且校验是否为function, 最后又压入lua全局表中。</p>
<p>下面来看看ejoy2d窗口的消息函数<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> LRESULT CALLBACK</span></div><div class="line"><span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">switch</span> (message) &#123;</div><div class="line">	<span class="keyword">case</span> WM_CREATE:</div><div class="line">		init_window(hWnd);</div><div class="line">		SetTimer(hWnd,<span class="number">0</span>,<span class="number">10</span>,<span class="literal">NULL</span>);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	<span class="keyword">case</span> WM_PAINT: &#123;</div><div class="line">		<span class="keyword">if</span> (GetUpdateRect(hWnd, <span class="literal">NULL</span>, FALSE)) &#123;</div><div class="line">			HDC hDC = GetDC(hWnd);</div><div class="line">			update_frame(hDC);</div><div class="line">			ValidateRect(hWnd, <span class="literal">NULL</span>);</div><div class="line">			ReleaseDC(hWnd, hDC);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">case</span> WM_TIMER : &#123;</div><div class="line">		ejoy2d_win_update();</div><div class="line">		InvalidateRect(hWnd, <span class="literal">NULL</span> , FALSE);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">case</span> WM_DESTROY:</div><div class="line">		PostQuitMessage(<span class="number">0</span>);</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">case</span> WM_LBUTTONUP: &#123;</div><div class="line">		<span class="keyword">int</span> x,y;</div><div class="line">		get_xy(lParam, &amp;x, &amp;y); </div><div class="line">		ejoy2d_win_touch(x,y,TOUCH_END);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">case</span> WM_LBUTTONDOWN: &#123;</div><div class="line">		<span class="keyword">int</span> x,y;</div><div class="line">		get_xy(lParam, &amp;x, &amp;y); </div><div class="line">		ejoy2d_win_touch(x,y,TOUCH_BEGIN);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">case</span> WM_MOUSEMOVE: &#123;</div><div class="line">		<span class="keyword">int</span> x,y;</div><div class="line">		get_xy(lParam, &amp;x, &amp;y); </div><div class="line">		ejoy2d_win_touch(x,y,TOUCH_MOVE);</div><div class="line">		<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> DefWindowProcW(hWnd, message, wParam, lParam);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="条件分支"><a href="#条件分支" class="headerlink" title="条件分支"></a>条件分支</h4><ul>
<li><p>WM_CREATE<br>会调用<em>init_window</em>函数，此函数会在窗口创建之前做一些初始化<br>创建opengl Context等等工作</p>
</li>
<li><p>WM_PAINT<br>调用ejoy2d_game_drawframe 绘制游戏</p>
</li>
<li><p>WM_TIMER<br>这个是一个定时器, 游戏的帧循环<br>调用ejoy2d_game_update函数</p>
</li>
</ul>
<p>*其他<br>其他都是处理游戏的touch事件</p>
<p>至此，游戏的运行流程分析完毕。</p>
<p>注:ejoy2d_game_drawframe、ejoy2d_game_update、ejoy2d_game_touch等函数都是调用了，先前在lua中注册到ejoy2d.framework、以及lua全局表中的相关函数，而这些函数是main.lua中ejoy2d.start的参数，作为回调函数。</p>
]]></content>
    
    <summary type="html">
    
      阅读ejoy2d源码
    
    </summary>
    
      <category term="ejoy2d" scheme="http://yoursite.com/categories/ejoy2d/"/>
    
    
      <category term="ejoy2d" scheme="http://yoursite.com/tags/ejoy2d/"/>
    
      <category term="gameengine" scheme="http://yoursite.com/tags/gameengine/"/>
    
  </entry>
  
  <entry>
    <title>ejoy2d源码阅读(1)-启动流程</title>
    <link href="http://yoursite.com/2016/10/14/ejoy2d%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-1-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/10/14/ejoy2d源码阅读-1-启动流程/</id>
    <published>2016-10-14T14:10:53.000Z</published>
    <updated>2016-10-16T04:25:35.142Z</updated>
    
    <content type="html"><![CDATA[<pre><code>本系列文章用于记录阅读ejoy2d的笔记，由于水平有限，有错误之处，还请不吝指正。
此篇文章首先分析ejoy2d的启动流程。
</code></pre><a id="more"></a>
<p>首先先找到ejoy2d的入口函数(暂时先看windows平台)main函数<br>mingw/window.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span></span></div><div class="line"><span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> &#123;</div><div class="line">	register_class();</div><div class="line">	HWND wnd = create_window(WIDTH,HEIGHT);</div><div class="line">	ejoy2d_win_init(argc, argv);</div><div class="line"></div><div class="line">	ShowWindow(wnd, SW_SHOWDEFAULT);</div><div class="line">	UpdateWindow(wnd);</div><div class="line"></div><div class="line">	MSG msg;</div><div class="line">	<span class="keyword">while</span> (GetMessage(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>)) &#123;</div><div class="line">		TranslateMessage(&amp;msg);</div><div class="line">		DispatchMessage(&amp;msg);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>首先<em>register_class</em>函数注册了窗口类, 然后创建了窗口, 窗口宽度为<em>WIDTH</em>(1024), 窗口高度为<em>HEIGHT</em>(768).然后才是我们要研究的重点，ejoy2d的启动入口<font color="#FF0000"> <strong>ejoy2d_win_init</strong> </font>。</p>
<p>mingw/winfw.c<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span></span></div><div class="line"><span class="title">ejoy2d_win_init</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> &#123;</div><div class="line">	G = create_game();</div><div class="line">	screen_init(WIDTH,HEIGHT,<span class="number">1.0f</span>);</div><div class="line">	lua_State *L = ejoy2d_game_lua(G-&gt;game);</div><div class="line">	lua_pushcfunction(L, traceback);</div><div class="line">	<span class="keyword">int</span> tb = lua_gettop(L);</div><div class="line">	<span class="keyword">int</span> err = luaL_loadstring(L, startscript);</div><div class="line">	<span class="keyword">if</span> (err) &#123;</div><div class="line">		<span class="keyword">const</span> <span class="keyword">char</span> *msg = lua_tostring(L,<span class="number">-1</span>);</div><div class="line">		fault(<span class="string">"%s"</span>, msg);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">char</span> modname[<span class="number">1024</span>];</div><div class="line"></div><div class="line">	<span class="keyword">int</span> sz = GetModuleFileNameA(<span class="number">0</span>,  modname, <span class="number">1024</span>);</div><div class="line"></div><div class="line">	lua_pushlstring(L, modname, sz);</div><div class="line"></div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;argc;i++) &#123;</div><div class="line">		lua_pushstring(L, argv[i]);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	err = lua_pcall(L, argc, <span class="number">0</span>, tb);</div><div class="line">	<span class="keyword">if</span> (err) &#123;</div><div class="line">		<span class="keyword">const</span> <span class="keyword">char</span> *msg = lua_tostring(L,<span class="number">-1</span>);</div><div class="line">		fault(<span class="string">"%s"</span>, msg);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	lua_pop(L,<span class="number">1</span>);</div><div class="line"></div><div class="line">	ejoy2d_game_start(G-&gt;game);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="ejoy2d-win-init调用流程"><a href="#ejoy2d-win-init调用流程" class="headerlink" title="ejoy2d_win_init调用流程"></a>ejoy2d_win_init调用流程</h4><ol>
<li>create_game<br>创建一个WINDOWGAME结构来存储ejoy2d属性比如lua虚拟机。并且调用了ejoy_inith函数向lua虚拟机中注册ejoy2d.framework等库,调用了shader_init函数初始化shader。</li>
</ol>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span></span></div><div class="line"><span class="title">ejoy2d_init</span><span class="params">(lua_State *L)</span> &#123;</div><div class="line">	checkluaversion(L);</div><div class="line">	lua_pushliteral(L, OS_STRING);</div><div class="line">	lua_setglobal(L , <span class="string">"OS"</span>);</div><div class="line"></div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.shader.c"</span>, ejoy2d_shader, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.framework"</span>, ejoy2d_framework, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.ppm"</span>, ejoy2d_ppm, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.spritepack.c"</span>, ejoy2d_spritepack, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.sprite.c"</span>, ejoy2d_sprite, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.renderbuffer"</span>, ejoy2d_renderbuffer, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.matrix.c"</span>, ejoy2d_matrix, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.particle.c"</span>, ejoy2d_particle, <span class="number">0</span>);</div><div class="line">	luaL_requiref(L, <span class="string">"ejoy2d.geometry.c"</span>, ejoy2d_geometry, <span class="number">0</span>);</div><div class="line"></div><div class="line">	lua_settop(L,<span class="number">0</span>);</div><div class="line"></div><div class="line">	shader_init();</div><div class="line">	label_load();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li><p>screen_init<br>初始化屏幕数据，并且告诉opengl在屏幕中绘制图形的区域</p>
</li>
<li><p>lua_pushcfunction(L, traceback)<br>为后面的 lua_pcall设置错误处理函数traceback</p>
</li>
<li><p>luaL_loadstring(L, startscript)<br>加载启动脚本</p>
</li>
</ol>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> * startscript =</div><div class="line"><span class="string">"local path, script = ...\n"</span></div><div class="line"><span class="string">"require(\"ejoy2d.framework\").WorkDir = ''\n"</span></div><div class="line"><span class="string">"assert(script, 'I need a script name')\n"</span></div><div class="line"><span class="string">"path = string.match(path,[[(.*)\\[^\\]*$]])\n"</span></div><div class="line"><span class="string">"package.path = path .. [[\\?.lua;]] .. path .. [[\\?\\init.lua;.\\?.lua;.\\?\\init.lua]]\n"</span></div><div class="line"><span class="string">"local f = assert(loadfile(script))\n"</span></div><div class="line"><span class="string">"f(script)\n"</span></div><div class="line">;</div></pre></td></tr></table></figure>
<ol>
<li><p>GetModuleFileNameA(0,  modname, 1024)<br>获取程序路径</p>
</li>
<li><p>lua_pushlstring(L, modname, sz)<br>将游戏路径压入栈中</p>
</li>
<li><p>lua_pushstring(L, argv[i])<br>将程序启动参数压入栈中(第一个没有压入, 压入的是上面的游戏路径)</p>
</li>
<li><p>lua_pcall(L, argc, 0, tb)<br>调用刚才loadscript返回的函数<br>把函数game.update、game.drawframe、game.touch、game.on_resume、game.on_pause、game.message、game.handle_error注册到lua的全局表中</p>
</li>
</ol>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">local</span> ej = <span class="built_in">require</span> <span class="string">"ejoy2d"</span>   <span class="comment">--lua  require一个目录，会执行目录中的init.lua脚本</span></div><div class="line"><span class="keyword">local</span> fw = <span class="built_in">require</span> <span class="string">"ejoy2d.framework"</span></div><div class="line"><span class="keyword">local</span> pack = <span class="built_in">require</span> <span class="string">"ejoy2d.simplepackage"</span></div><div class="line">pack.<span class="built_in">load</span> &#123;</div><div class="line">	pattern = fw.WorkDir..<span class="string">[[examples/asset/?]]</span>,</div><div class="line">	<span class="string">"sample"</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">local</span> obj = ej.sprite(<span class="string">"sample"</span>,<span class="string">"cannon"</span>)</div><div class="line"><span class="keyword">local</span> turret = obj.turret</div><div class="line"></div><div class="line"><span class="comment">-- set position (-100,0) scale (0.5)</span></div><div class="line">obj:ps(<span class="number">-100</span>,<span class="number">0</span>,<span class="number">0.5</span>)</div><div class="line"></div><div class="line"><span class="keyword">local</span> obj2 = ej.sprite(<span class="string">"sample"</span>,<span class="string">"mine"</span>)</div><div class="line">obj2.resource.frame = <span class="number">70</span></div><div class="line"><span class="comment">-- set position(100,0) scale(1.2) separately</span></div><div class="line">obj2:ps(<span class="number">100</span>,<span class="number">0</span>)</div><div class="line">obj2:ps(<span class="number">1.2</span>)</div><div class="line"></div><div class="line"><span class="keyword">local</span> game = &#123;&#125;</div><div class="line"><span class="keyword">local</span> screencoord = &#123; x = <span class="number">512</span>, y = <span class="number">384</span>, scale = <span class="number">1.2</span> &#125;</div><div class="line"><span class="keyword">local</span> x1,y1,x2,y2 = obj2:aabb(screencoord)</div><div class="line">obj2.label.text = <span class="built_in">string</span>.format(<span class="string">"AABB\n%d x %d"</span>, x2-x1, y2-y1)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.update</span><span class="params">()</span></span></div><div class="line">	turret.frame = turret.frame + <span class="number">3</span></div><div class="line">	obj2.frame = obj2.frame + <span class="number">1</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.drawframe</span><span class="params">()</span></span></div><div class="line">	ej.clear(<span class="number">0xff808080</span>)	<span class="comment">-- clear (0.5,0.5,0.5,1) gray</span></div><div class="line">	obj:draw(screencoord)</div><div class="line">	obj2:draw(screencoord)</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.touch</span><span class="params">(what, x, y)</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.message</span><span class="params">(...)</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.handle_error</span><span class="params">(...)</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.on_resume</span><span class="params">()</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">game.on_pause</span><span class="params">()</span></span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">ej.start(game)</div></pre></td></tr></table></figure>
<ol>
<li>ejoy2d_game_start(G-&gt;game)<br>获取lua虚拟机全局表中的函数</li>
</ol>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span></span></div><div class="line"><span class="title">ejoy2d_game_start</span><span class="params">(<span class="keyword">struct</span> game *G)</span> &#123;</div><div class="line">	lua_State *L = G-&gt;L;</div><div class="line">	lua_getfield(L, LUA_REGISTRYINDEX, EJOY_INIT);</div><div class="line">	lua_call(L, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">	assert(lua_gettop(L) == <span class="number">0</span>);</div><div class="line">	lua_pushcfunction(L, traceback);</div><div class="line">	lua_getfield(L,LUA_REGISTRYINDEX, EJOY_UPDATE);</div><div class="line">	lua_getfield(L,LUA_REGISTRYINDEX, EJOY_DRAWFRAME);</div><div class="line">	lua_getfield(L,LUA_REGISTRYINDEX, EJOY_MESSAGE);</div><div class="line">	lua_getfield(L,LUA_REGISTRYINDEX, EJOY_RESUME);</div><div class="line">	lua_getfield(L,LUA_REGISTRYINDEX, EJOY_PAUSE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码中 lua_getfield(L, LUA_REGISTRYINDEX, EJOY_INIT) 与 lua_call(L, 0, 0)  会调用虚拟机中的EJOY_INIT函数，这个函数是ejoy2d\init.lua中的fw.EJOY_INIT函数。<br>至此, ejoy2d已经启动。</p>
]]></content>
    
    <summary type="html">
    
      阅读ejoy2d源码
    
    </summary>
    
      <category term="ejoy2d" scheme="http://yoursite.com/categories/ejoy2d/"/>
    
    
      <category term="ejoy2d" scheme="http://yoursite.com/tags/ejoy2d/"/>
    
      <category term="gameengine" scheme="http://yoursite.com/tags/gameengine/"/>
    
  </entry>
  
</feed>
